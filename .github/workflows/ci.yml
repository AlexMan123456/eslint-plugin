# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Setup package
      run: |
        npm ci
        npm run build --if-present
        git fetch --unshallow origin main

    - name: Check version number
      run: |
        echo "Checking version number..."
        if git diff origin/main...HEAD --quiet "src/*"; then
          echo "No source code changes found. Version does not need changing."
          exit 0
        fi

        oldPackageVersion=$(git show origin/main:package.json | jq -r '.version')
        newPackageVersion=$(jq -r '.version' package.json)

        if [[ "$oldPackageVersion" == "$newPackageVersion" ]]; then
          echo "❌ Version needs updating. Please run one of the following:"
          echo "- \`npm run change-major\` (e.g. v1.2.3 -> v2.0.0)"
          echo "- \`npm run change-minor\` (e.g. v1.2.3 -> v1.3.0)"
          echo "- \`npm run change-patch\` (e.g. v1.2.3 -> v1.2.4)"
          exit 1
        fi

        newLockVersion=$(jq -r '.version' package-lock.json)
        if [[ "$newPackageVersion" != "$newLockVersion" ]]; then
          echo "❌ package.json and package-lock.json out of sync. Please run \`npm install\` to fix this."
          exit 1
        fi
        echo "Version has been updated."
    - name: Run tests
      run: npm test
    - name: Run linting checks
      run: npm run lint
